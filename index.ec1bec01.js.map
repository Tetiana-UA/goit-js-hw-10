{"mappings":"YAqBO,SAASA,EAAgBC,GAC5B,IAIMC,EAAO,IAAIC,gBAAgB,CAC7BC,QAHW,wEAIXC,UAAUJ,IAGlB,OAAOK,MAAM,GAAeC,OATN,+BASG,KAAeA,OARnB,gBAQgB,KAAUA,OAAPL,IAAUM,MAAK,SAACC,GACpD,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,kBAEhB,OAAOF,EAASG,M,ICjBpB,IDZUV,ECYJW,EAAO,CACTC,YAAaC,SAASC,cAAc,iBACpCC,OAAQF,SAASC,cAAc,WAC/BE,MAAOH,SAASC,cAAc,UAC9BG,QAASJ,SAASC,cAAc,cAMpCH,EAAKI,OAAOG,MAAMC,QAAS,OAC3BR,EAAKK,MAAME,MAAMC,QAAS,QDvBhBnB,EAAO,IAAIC,gBAAgB,CAC7BC,QAHW,0EAMZE,MAAM,GAAeC,OARN,+BAQG,KAAeA,OAPnB,SAOgB,KAAUA,OAAPL,IAAUM,MAAK,SAACC,GACpD,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,kBAEpB,OAAOF,EAASG,M,KCwBfJ,MAAK,SAACc,GACHT,EAAKC,YAAYS,UAAYD,EAAOE,KAAI,SAACC,G,MAAQ,kBAA+BlB,OAAbkB,EAAMC,GAAG,MAAenB,OAAXkB,EAAME,KAAK,Y,IAC1FC,KAAK,G,IAETC,OAAM,SAACC,GACRjB,EAAKK,MAAME,MAAMC,QAAS,QAE1BU,QAAQC,IAAIF,E,IAKhBjB,EAAKC,YAAYmB,iBAAiB,UAElC,SAAsBC,GAClBrB,EAAKI,OAAOG,MAAMC,QAAS,QAI3BrB,EAFgBkC,EAAMC,OAAOC,OAGxB5B,MAAK,SAAC6B,GACPxB,EAAKM,QAAQI,UAarB,SAAsBc,GAClB,IAAMC,EAAQD,EAAK,GAAZC,IAC+BC,EAAAF,EAAK,GAAGf,OAAO,GAA/CK,EAAgCY,EAAhCZ,KAAMa,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,YAEzB,MAAO,yCACkBlC,OAAb+B,EAAI,WAEN/B,OAFeoB,EAAK,4EAGrBpB,OADCoB,EAAK,sBAEyCpB,OAD/CiC,EAAY,oEAC+CjC,OAAZkC,EAAY,mC,CAtBvCC,CAAaL,E,IAErCR,OAAM,SAACC,GACRC,QAAQC,IAAIF,E,IAEXa,SAAQ,WACL9B,EAAKI,OAAOG,MAAMC,QAAS,M","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["//Напиши функцію fetchBreeds(), яка виконує HTTP-запит і повертає проміс із масивом порід - результатом запиту. Винеси її у файл cat-api.js та зроби іменований експорт.\nexport function fetchBreeds() {\n    const BASE_URL  = \"https://api.thecatapi.com/v1\";\n    const ENDPOINT = \"breeds\"\n    const APY_KEY =\"live_KhQV1oKIS4BCvrcPDeozPUb3E9SMkjS0ykizMr5iBCwxr7OS8E0iDtuzHjzD1OGJ\"\n\n    const params=new URLSearchParams({\n        api_key:APY_KEY,\n    })\n\nreturn fetch(`${BASE_URL}/${ENDPOINT}?${params}`).then((response)=>{\n    if (!response.ok) {\n        throw new Errow(\"404 not found!\");\n    } \n    return response.json(); \n    })\n\n}\n\n\n//Напиши функцію fetchCatByBreed(breedId), яка очікує ідентифікатор породи, робить HTTP-запит і повертає проміс із даними про кота - результатом запиту. Винеси її у файл cat-api.js і зроби іменований експорт.\nexport function fetchCatByBreed(breedId) {\n    const BASE_URL  = \"https://api.thecatapi.com/v1\";\n    const ENDPOINT = \"images/search\"\n    const APY_KEY =\"live_KhQV1oKIS4BCvrcPDeozPUb3E9SMkjS0ykizMr5iBCwxr7OS8E0iDtuzHjzD1OGJ\"\n\n    const params=new URLSearchParams({\n        api_key:APY_KEY,\n        breed_ids:breedId,\n    })\n\nreturn fetch(`${BASE_URL}/${ENDPOINT}?${params}`).then((response)=>{\n    if (!response.ok) {\n    throw new Errow(\"404 not found!\");\n    } \n    return response.json(); \n})\n}\n\n\n","//HTTP-запити\n//Використовуй публічний The Cat API. \n\n\n\n//Поки відбувається будь-який HTTP-запит, необхідно показувати завантажувач - елемент p.loader. Поки запитів немає або коли запит завершився, завантажувач необхідно приховувати. Використовуй для цього додаткові CSS класи.\n\n//Якщо у користувача сталася помилка під час будь-якого HTTP-запиту, наприклад, впала мережа, була втрата пакетів тощо, тобто проміс було відхилено, необхідно відобразити елемент p.error, а при кожному наступному запиті приховувати його. Використовуй для цього додаткові CSS класи.\n\n//Додай мінімальне оформлення елементів інтерфейсу.\n\n\n//                           В И К О Н А Н Н Я\n\n//import SlimSelect from 'slim-select'\n\nimport { fetchBreeds, fetchCatByBreed } from \"./cat-api.js\";\n\nconst refs = {\n    breedSelect: document.querySelector(\".breed-select\"),\n    loader: document.querySelector(\".loader\"),\n    error: document.querySelector(\".error\"),\n    catInfo: document.querySelector(\".cat-info\"),\n}\n//new SlimSelect({\n //   select: '#breed'\n // })\n\nrefs.loader.style.display= \"none\";\nrefs.error.style.display= \"none\";\n//refs.loader.classList.add(\"isHidden\");\n//refs.error.classList.add(\"isHidden\");\n//console.log(refs.loader.classList);\n\n//Під час завантаження сторінки має виконуватися HTTP-запит за колекцією порід. Для цього необхідно виконати GET-запит на ресурс https://api.thecatapi.com/v1/breeds, що повертає масив об'єктів. У разі успішного запиту, необхідно наповнити select.breed-select опціями так, щоб value опції містило id породи, а в інтерфейсі користувачеві відображалася назва породи.\n\n//При завантаженні сторінки в селект записуємо результат функції fetchBreeds. Під час обробки результату функції, ми map-ємо \nfetchBreeds()\n    .then((breeds)=>{\n        refs.breedSelect.innerHTML = breeds.map((breed)=>`<option value=\"${breed.id}\">${breed.name}</option>`)\n        .join(\"\")\n    })\n    .catch((err)=>{\n    refs.error.style.display= \"block\";\n    //refs.error.classList.remove(\"isHidden\");\n    console.log(err);\n    });\n\n\n//Коли користувач обирає якусь опцію в селекті, необхідно виконувати запит за повною інформацією про кота на ресурс https://api.thecatapi.com/v1/images/search. Не забудь вказати в цьому запиті параметр рядка запиту breed_ids з ідентифікатором породи.\nrefs.breedSelect.addEventListener(\"change\", handleSelect);\n\nfunction handleSelect(event) {\n    refs.loader.style.display= \"block\";\n    //refs.loader.classList.remove(\"isHidden\");\n    const breedId = event.target.value;\n    \n    fetchCatByBreed(breedId)\n        .then((data)=>{\n        refs.catInfo.innerHTML = createMarkup(data);\n        })\n        .catch((err)=>{\n        console.log(err)\n        })\n        .finally(()=>{\n            refs.loader.style.display= \"none\";\n            //refs.loader.classList.add(\"isHidden\");\n        })\n    \n    \n}\n\nfunction createMarkup(data) {\n    const {url} = data[0];\n    const{name, description, temperament}=data[0].breeds[0];\n\n    return `<div class=\"cat-card\">\n    <img src=\"${url}\" alt=\"${name} width=\"600\" height=\"400>\n    <div class=\"cat-card-info\">\n        <h1>${name}</h1>\n        <p>${description}</p>\n        <p><span class=\"temperament\">Temperament: </span> ${temperament}</p>\n        </div>\n    </div>` \n}       \n"],"names":["$ae0c329fb0fb36dc$export$57b7d3a597416aa2","breedId","params","URLSearchParams","api_key","breed_ids","fetch","concat","then","response","ok","Errow","json","$b8f9b7833fa37166$var$refs","breedSelect","document","querySelector","loader","error","catInfo","style","display","breeds","innerHTML","map","breed","id","name","join","catch","err","console","log","addEventListener","event","target","value","data","url","ref","description","temperament","$b8f9b7833fa37166$var$createMarkup","finally"],"version":3,"file":"index.ec1bec01.js.map"}