{"mappings":"AAqBO,SAASA,EAAgBC,GAC5B,MAIMC,EAAO,IAAIC,gBAAgB,CAC7BC,QAHW,wEAIXC,UAAUJ,IAGlB,OAAOK,MAAM,8CAA2BJ,KAAUK,MAAMC,IACpD,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,kBAEhB,OAAOF,EAASG,MAAM,G,CC3B1B,MAAMC,EAAO,CACTC,YAAaC,SAASC,cAAc,iBACpCC,OAAQF,SAASC,cAAc,WAC/BE,MAAOH,SAASC,cAAc,UAC9BG,QAASJ,SAASC,cAAc,cAQwDH,EAAvFC,YAAYM,MAAMC,QAAS,OAChCR,EAAKM,QAAQC,MAAMC,QAAS,OAC5BR,EAAKI,OAAOG,MAAMC,QAAS,QAC3BR,EAAKK,MAAME,MAAMC,QAAS,ODtBnB,WACH,MAIMlB,EAAO,IAAIC,gBAAgB,CAC7BC,QAHW,0EAMnB,OAAOE,MAAM,uCAA2BJ,KAAUK,MAAMC,IACpD,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,kBAEpB,OAAOF,EAASG,MAAM,G,CCgB8P,GACnRJ,MAAMc,IACHT,EAAKC,YAAYS,UAAYD,EAAOE,KAAKC,GAAQ,kBAAkBA,EAAMC,OAAOD,EAAME,kBACrFC,KAAK,GAAG,IAEZC,OAAOC,IAEiLjB,EAApLK,MAAME,MAAMC,QAAS,QAE1BU,QAAQC,IAAIF,EAAI,IAEfG,SAAQ,KACLpB,EAAKC,YAAYM,MAAMC,QAAS,QAChCR,EAAKI,OAAOG,MAAMC,QAAS,MAAM,IAMyIR,EAA7KC,YAAYoB,iBAAiB,UAElC,SAAsBC,GAClBtB,EAAKI,OAAOG,MAAMC,QAAS,QAK3BpB,EAFgBkC,EAAMC,OAAOC,OAGxB7B,MAAM8B,IAEPzB,EAAKM,QAAQI,UAYrB,SAAsBe,GAClB,MAAMC,IAACA,GAAOD,EAAK,IACdX,KAACA,EAAIa,YAAEA,EAAWC,YAAEA,GAAaH,EAAK,GAAGhB,OAAO,GAErD,MAAO,yCACKiB,WAAaZ,4EAEfA,sBACDa,oEAC+CC,mC,CArB3BC,CAAaJ,EAAK,IAE1CT,OAAOC,IACRC,QAAQC,IAAIF,EAAI,IAEfG,SAAQ,KACLpB,EAAKI,OAAOG,MAAMC,QAAS,OAC3BR,EAAKM,QAAQC,MAAMC,QAAS,OAAO,G","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["//Напиши функцію fetchBreeds(), яка виконує HTTP-запит і повертає проміс із масивом порід - результатом запиту. Винеси її у файл cat-api.js та зроби іменований експорт.\nexport function fetchBreeds() {\n    const BASE_URL  = \"https://api.thecatapi.com/v1\";\n    const ENDPOINT = \"breeds\"\n    const APY_KEY =\"live_KhQV1oKIS4BCvrcPDeozPUb3E9SMkjS0ykizMr5iBCwxr7OS8E0iDtuzHjzD1OGJ\"\n\n    const params=new URLSearchParams({\n        api_key:APY_KEY,\n    })\n\nreturn fetch(`${BASE_URL}/${ENDPOINT}?${params}`).then((response)=>{\n    if (!response.ok) {\n        throw new Errow(\"404 not found!\");\n    } \n    return response.json(); \n    })\n\n}\n\n\n//Напиши функцію fetchCatByBreed(breedId), яка очікує ідентифікатор породи, робить HTTP-запит і повертає проміс із даними про кота - результатом запиту. Винеси її у файл cat-api.js і зроби іменований експорт.\nexport function fetchCatByBreed(breedId) {\n    const BASE_URL  = \"https://api.thecatapi.com/v1\";\n    const ENDPOINT = \"images/search\"\n    const APY_KEY =\"live_KhQV1oKIS4BCvrcPDeozPUb3E9SMkjS0ykizMr5iBCwxr7OS8E0iDtuzHjzD1OGJ\"\n\n    const params=new URLSearchParams({\n        api_key:APY_KEY,\n        breed_ids:breedId,\n    })\n\nreturn fetch(`${BASE_URL}/${ENDPOINT}?${params}`).then((response)=>{\n    if (!response.ok) {\n    throw new Errow(\"404 not found!\");\n    } \n    return response.json(); \n})\n}\n\n\n","//................HTTP-запити............................................\n//........Використовуємо публічний The Cat API............................. \n\n\n//import SlimSelect from 'slim-select';\n//import \"slim-select/dist/slimselect.css\";\nimport { fetchBreeds, fetchCatByBreed } from \"./cat-api.js\";\n\nconst refs = {\n    breedSelect: document.querySelector(\".breed-select\"),\n    loader: document.querySelector(\".loader\"),\n    error: document.querySelector(\".error\"),\n    catInfo: document.querySelector(\".cat-info\"),\n}\n\n//new SlimSelect({\n //   select: '#breed'\n//})\n\n//Поки відбувається будь-який HTTP-запит, необхідно показувати завантажувач - елемент p.loader. А всі інші елементи приховати:\nrefs.breedSelect.style.display= \"none\";\nrefs.catInfo.style.display= \"none\";\nrefs.loader.style.display= \"block\";\nrefs.error.style.display= \"none\";\n//refs.loader.classList.add(\"isHidden\");\n//refs.error.classList.add(\"isHidden\");\n//console.log(refs.loader.classList);\n\n\n//Під час завантаження сторінки має виконуватися HTTP-запит за колекцією порід - тобто буде викликатися функція fetchBreeds. Під час обробки її результату (масиву breeds), ми map-ємо цей масив (з кожного обєкту масиву  витягуємо необхідні властивості (id, name) і наповнюємо (за доп.innerHTML) ними опції breedSelect так, щоб value опції містило id породи, а в інтерфейсі користувачеві відображалася назва породи:\nfetchBreeds()\n    .then((breeds)=>{\n        refs.breedSelect.innerHTML = breeds.map((breed)=>`<option value=\"${breed.id}\">${breed.name}</option>`)\n        .join(\"\")\n    })\n    .catch((err)=>{\n//Якщо у користувача сталася помилка під час будь-якого HTTP-запиту, наприклад, впала мережа, була втрата пакетів тощо, тобто проміс було відхилено, необхідно відобразити елемент p.error, а при кожному наступному запиті приховувати його. \n    refs.error.style.display= \"block\";\n    //refs.error.classList.remove(\"isHidden\");\n    console.log(err);\n    })\n    .finally(()=>{\n        refs.breedSelect.style.display= \"block\";\n        refs.loader.style.display= \"none\";\n    }\n    );\n\n\n//Коли користувач обирає якусь опцію в селекті, необхідно виконувати запит за повною інформацією про кота,  тобто при події change в викливається функція fetchCatByBreed, якій для параметра рядка запиту breed_ids передається ідентифікатор породи breedId.\nrefs.breedSelect.addEventListener(\"change\", handleSelect);\n\nfunction handleSelect(event) {\n    refs.loader.style.display= \"block\";\n    //refs.loader.classList.remove(\"isHidden\");\n\n    const breedId = event.target.value; //ідентифікатор породи беремо з вибраної опції селекту breedSelect, на якому висить слухач події (у опцій value=breed.id).\n    \n    fetchCatByBreed(breedId)\n        .then((data)=>{\n        //Результат (data) виклику фунції fetchCatByBreed під час обробки записуємо в catInfo (зробивши розмітку за допомогою функції createMarkup)\n        refs.catInfo.innerHTML = createMarkup(data);\n        })\n        .catch((err)=>{\n        console.log(err)\n        })\n        .finally(()=>{\n            refs.loader.style.display= \"none\";\n            refs.catInfo.style.display= \"block\";\n            //refs.loader.classList.add(\"isHidden\");\n        })\n}\n\nfunction createMarkup(data) {\n    const {url} = data[0];\n    const{name, description, temperament}=data[0].breeds[0];\n\n    return `<div class=\"cat-card\">\n    <img src=\"${url}\" alt=\"${name} width=\"550\" height=\"350>\n    <div class=\"cat-card-info\">\n        <h1>${name}</h1>\n        <p>${description}</p>\n        <p><span class=\"temperament\">Temperament: </span> ${temperament}</p>\n        </div>\n    </div>` \n}       \n\n\n\n\n//<link rel=\"stylesheet\" href=\"./cat.css\" />"],"names":["$6b5f202d1456c0af$export$57b7d3a597416aa2","breedId","params","URLSearchParams","api_key","breed_ids","fetch","then","response","ok","Errow","json","$1f0dc3b9307be026$var$refs","breedSelect","document","querySelector","loader","error","catInfo","style","display","breeds","innerHTML","map","breed","id","name","join","catch","err","console","log","finally","addEventListener","event","target","value","data","url","description","temperament","$1f0dc3b9307be026$var$createMarkup"],"version":3,"file":"index.e217dd16.js.map"}